View(human)
kdata <- data.frame(FC = Mouse$log2FoldChange)
rownames(kdata) = Mouse$Gene
pathview(gene.data = kdata, pathway.id = '04010',
species = "mmu", out = 'MAPK signaling pathway' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04660',
species = "mmu", out = 'T cell receptor signaling pathway' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04659',
species = "mmu", out = 'Th17 cell differentiation' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04658',
species = "mmu", out = 'Th1 and Th2 cell differentiation' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
kdata <- data.frame(FC = human$log2FoldChange)
rownames(kdata) = human$Gene
pathview(gene.data = kdata, pathway.id = '04658',
species = "hsa", out = 'Th1 and Th2 cell differentiation' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04659',
species = "hsa", out = 'Th1 and Th2 cell differentiation' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04660',
species = "hsa", out = 'Th1 and Th2 cell differentiation' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
my.symbols <- AnnotationDbi::select(org.Hs.eg.db,
keys = human$Gene,
columns = c("ENTREZID"),
keytype = "SYMBOL")
my.symbols <- my.symbols[!is.na(my.symbols$ENTREZID), ]
colnames(my.symbols)[1] <- "Gene"
my.symbols <- merge(my.symbols, human, by="Gene")
fc = as.numeric(my.symbols$log2FoldChange)
names(fc) = as.character(my.symbols$ENTREZID)
fc = sort(fc, decreasing = TRUE)
edo_gsea <- gseGO(fc, OrgDb = org.Hs.eg.db, ont = 'BP', pvalueCutoff = 0.05)
edo_gsea$Description
edo_gsea <- gseGO(fc, OrgDb = org.Hs.eg.db, ont = 'BP', pvalueCutoff = 1)
for(i in 1:length(edo_gsea$Description)){
if(edo_gsea$Description[i] =='positive regulation of neuron projection development'){
print(i)
break
}
}
pdf('D:/zipp_pub/Mouse/heatmap/GSEA_human_positive regulation of neuron projection development.pdf', width = 10, height = 10)
pdf('D:/zipp_pub/heatmap/GSEA_human_positive regulation of neuron projection development.pdf', width = 10, height = 10)
pdf('D:/zipp_pub/heatmap/GSEA_human_positive_regulation_of_neuron_projection_development.pdf', width = 10, height = 10)
pdf('D:/zipp_pub/heatmaps/GSEA_human_positive_regulation_of_neuron_projection_development.pdf', width = 10, height = 10)
gseaplot2(edo_gsea, geneSetID = 648)
dev.off()
pdf('D:/zipp_pub/heatmaps/GSEA_human_positive_regulation_of_neuron_projection_development.pdf', width = 10, height = 10)
gseaplot2(edo_gsea, geneSetID = 648, title = 'positive regulation of neuron projection development')
dev.off()
for(i in 1:length(edo_gsea$Description)){
if(edo_gsea$Description[i] =='regulation of postsynapse organisation'){
print(i)
break
}
}
edo_gsea$Description
for(i in 1:length(edo_gsea$Description)){
if(edo_gsea$Description[i] =='regulation of postsynapse organisation'){
print(i)
break
}
}
for(i in 1:length(edo_gsea$Description)){
if(edo_gsea$Description[i] =='regulation of postsynaptic membrane neurotransmitter receptor levels'){
print(i)
break
}
}
pdf('D:/zipp_pub/heatmaps/GSEA_human_regulation of postsynaptic membrane neurotransmitter receptor levels.pdf', width = 10, height = 10)
gseaplot2(edo_gsea, geneSetID = 760, title = 'regulation of postsynaptic membrane neurotransmitter receptor levels')
dev.off()
for(i in 1:length(edo_gsea$Description)){
if(edo_gsea$Description[i] =='protein localization to cell periphery'){
print(i)
break
}
}
pdf('D:/zipp_pub/heatmaps/GSEA_human_protein localization to cell periphery.pdf', width = 10, height = 10)
gseaplot2(edo_gsea, geneSetID = 1189, title = 'protein localization to cell periphery')
dev.off()
edo_gsea <- gseGO(fc, OrgDb = org.Hs.eg.db, ont = 'BP', pvalueCutoff = 0.05)
View(edo_gsea)
export(edo_gsea@result, 'D:/zipp_pub/heatmaps/GSEA_human.xlsx')
my.symbols <- AnnotationDbi::select(org.Mm.eg.db,
keys = Mouse$Gene,
columns = c("ENTREZID"),
keytype = "SYMBOL")
my.symbols <- my.symbols[!is.na(my.symbols$ENTREZID), ]
colnames(my.symbols)[1] <- "Gene"
my.symbols <- merge(my.symbols, Mouse, by="Gene")
fc = as.numeric(my.symbols$log2FoldChange)
names(fc) = as.character(my.symbols$ENTREZID)
fc = sort(fc, decreasing = TRUE)
edo_gsea <- gseGO(fc, OrgDb = org.Mm.eg.db, ont = 'BP', pvalueCutoff = 0.05)
export(edo_gsea@result, 'D:/zipp_pub/heatmaps/GSEA_mouse.xlsx')
pdf('D:/zipp_pub/heatmaps/GSEA_mouse_synaptic signaling.pdf', width = 10, height = 10)
gseaplot2(edo_gsea, geneSetID = 20, title = 'synaptic signaling')
dev.off()
save.image("D:/zipp_pub/analysis.RData")
cor.test(-0.24)
cor.test(-0.24, 0)
help("cor.test")
load("D:/spalax_micrornas/target_statistiks.RData")
hum <- read.csv('D:/repositories/cotargeter/inst/extdata/human_database.csv')
colnames(hum)[2] <- 'gene'
counttargetscan <- sqldf("SELECT gene, count(gene) as number, GC_content, UTR_length, phylop FROM hum GROUP BY gene")
library(sqldf)
counttargetscan <- sqldf("SELECT gene, count(gene) as number, GC_content, UTR_length, phylop FROM hum GROUP BY gene")
x <- as.numeric(counttargetscan$number)
y <- as.numeric(counttargetscan$UTR_length)
cor.test(x, y)
x <- as.numeric(counttargetscan$number)
y <- as.numeric(counttargetscan$GC_content)
cor.test(x, y)
x <- as.numeric(counttargetscan$number)
y <- as.numeric(counttargetscan$phylop)
cor.test(x, y)
x <- as.numeric(spalax_targets1$Tot.Score)
y <- as.numeric(spalax_targets1$Tot.Energy)
cor.test(x, y)
x <- as.numeric(whale_targets1$Tot.Score)
y <- as.numeric(whale_targets1$Tot.Energy)
cor.test(x, y)
x <- as.numeric(whale_targets1$Tot.Score)
y <- as.numeric(whale_targets1$Al.Len)
cor.test(x, y)
x <- as.numeric(spalax_targets1$Tot.Score)
y <- as.numeric(spalax_targets1$Al.Len)
cor.test(x, y)
load("D:/spalax_micrornas/target_statistiks.RData")
x <- as.numeric(spalax_targets1$Tot.Score)
y <- as.numeric(spalax_targets1$Tot.Energy)
cor.test(x, y, method = 'spearman')
help("cor.test")
x <- as.numeric(whale_targets1$Tot.Score)
y <- as.numeric(whale_targets1$Tot.Energy)
cor.test(x, y, method = 'spearman')
x <- as.numeric(spalax_targets1$Tot.Score)
y <- as.numeric(spalax_targets1$Al.Len)
cor.test(x, y, method = 'spearman')
x <- as.numeric(whale_targets1$Tot.Score)
y <- as.numeric(whale_targets1$Al.Len)
cor.test(x, y, method = 'spearman')
human <- read_xlsx('D:/zipp_pub/DEtable_padj0.05.xlsx')
library('VennDiagram')
library('sqldf')
library('org.Mm.eg.db')
library('pathview')
library('ggupset')
library('ggnewscale')
library("DESeq2")
library('rio')
library('org.Hs.eg.db')
library('org.Rn.eg.db')
library('readxl')
library('DOSE')
library('enrichplot')
library('clusterProfiler')
library('RColorBrewer')
library('org.Rn.eg.db')
human <- read_xlsx('D:/zipp_pub/DEtable_padj0.05.xlsx')
human$log2FoldChange = -(human$log2FoldChange)
View(human)
my.symbols <- AnnotationDbi::select(org.Hs.eg.db,
keys = human$Gene,
columns = c("ENTREZID"),
keytype = "SYMBOL")
View(my.symbols)
edo <- enrichKEGG(my.symbols$ENTREZID, organism="hsa", pvalueCutoff = 0.05)
barplot(edo, showCategory = 30)
GO <- edo@result
for(i in 1:length(GO$geneID)){
a <- GO$geneID[i]
a <- strsplit(a, "/")
a <- a[[1]]
a <- data.frame(a)
colnames(a) <- "ENTREZID"
a <- merge(a, my.symbols, by="ENTREZID")
a <- paste(a$SYMBOL, collapse='/')
GO$geneID[i] <- a
}
export(GO, 'D:/zipp_pub/heatmaps/KEGG_human_padj0.05.xlsx')
database <- read.csv('D:/spalax_micrornas/microrna/miRTarBase.csv')
database <- read.csv('D:/spalax_micrornas/microrna/targetscan.csv')
database <- read.csv('D:/spalax_micrornas/microrna/PITA_sites_mm9_3_15_TOP.tab.csv')
database <- read.csv('D:/spalax_micrornas/microrna/miRDB_v6.0_prediction_result.tsv', sep = '\t', header = FALSE)
library(sqldf)
library(VennDiagram)
mirnas <- read.csv("D:/spalax_micrornas/microrna/black2.csv", header = TRUE)
targetscan <- read.csv("D:/spalax_micrornas/microrna/TargetScan.csv", header = TRUE)
colnames(targetscan)[1] <- 'mirnas'
miRNAtoFamily <- read.csv("D:/spalax_micrornas/microrna/miR_Family_Info.csv", header = TRUE)
colnames(miRNAtoFamily)[4] <- 'miRNA'
mirtarbase <- read.csv("D:/spalax_micrornas/microrna/mmu_MTI.csv", header = TRUE)
mirecords <- read.csv("D:/spalax_micrornas/microrna/miRecords.csv", header = TRUE)
colnames(mirtarbase)[2] <- "mirnas"
mirnas <- merge(mirnas, miRNAtoFamily, by='miRNA')
mirnas <- mirnas$Ã¯..miR.family
mirnas <- unique(mirnas)
mirnas <- data.frame(mirnas)
foundtargetscan <- merge(mirnas, targetscan, by='mirnas')
foundgenestargetscan <- foundtargetscan$Gene.Symbol
foundgenestargetscan <- unique(foundgenestargetscan)
foundgenestargetscan <- data.frame(foundgenestargetscan)
k2 <- foundtargetscan$mirnas
k2 <- unique(k2)
k2
foundmirtarbase <- merge(mirnas, mirtarbase, by='mirnas')
gntarbase <- foundmirtarbase$Target.Gene
gntarbase <- unique(gntarbase)
gntarbase <- data.frame(gntarbase)
k1 <- foundmirtarbase$mirnas
k1 <- unique(k1)
mirnatargetscan <- merge(mirnas, targetscan, by="miRNA")
mirnatarbase <- merge(mirnas, mirtarbase, by="miRNA")
mirmirecords <- merge(mirnas, mirecords, by="miRNA")
counttargetscan <- sqldf("SELECT mirnas, count(mirnas) FROM foundtargetscan GROUP BY mirnas")
countmirnatarbase <- sqldf("SELECT mirnas, count(mirnas) FROM foundmirtarbase GROUP BY mirnas")
counttargetscan <- counttargetscan[order(counttargetscan$`count(mirnas)`, decreasing = TRUE),]
barplot(counttargetscan$`count(mirnas)`,col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas, cex.names=1)
counttargetscan$`count(mirnas)`
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, srt=45)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, srt=90)
help(barplot)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, angle =90)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, angle = 90)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, angle = 45)
help(barplot)
rotate_x <- function(data, column_to_plot, labels_vec, rot_angle) {
plt <- barplot(data[[column_to_plot]], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
}
rotate_x(counttargetscan$`count(mirnas)`[1:10], 'mpg', counttargetscan$mirnas[1:10], 45)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = labels_vec, srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = rot_angle, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.6)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
library(sqldf)
library(VennDiagram)
mirnas <- read.csv("D:/spalax_micrornas/microrna/black2.csv", header = TRUE)
targetscan <- read.csv("D:/spalax_micrornas/microrna/TargetScan.csv", header = TRUE)
colnames(targetscan)[1] <- 'mirnas'
mirtarbase <- read.csv("D:/spalax_micrornas/microrna/mmu_MTI.csv", header = TRUE)
mirDBN <- read.table(file = 'D:/spalax_micrornas/microrna/mm.tsv', sep = '\t', header = TRUE)
pitaf1 <- read.csv("D:/spalax_micrornas/microrna/PITA_sites_mm9_3_15_TOP.tab.csv", header = TRUE)
library(sqldf)
library(VennDiagram)
targetscan <- read.csv("D:/spalax_micrornas/microrna/TargetScan.csv", header = TRUE)
colnames(targetscan)[1] <- 'mirnas'
mirnas <- read.csv("D:/spalax_micrornas/microrna/black2.csv", header = TRUE)
foundtargetscan <- merge(mirnas, targetscan, by='mirnas')
View(mirnas)
colnames(mirnas) = 'mirnas'
foundtargetscan <- merge(mirnas, targetscan, by='mirnas')
foundgenestargetscan <- foundtargetscan$Gene.Symbol
foundgenestargetscan <- unique(foundgenestargetscan)
foundgenestargetscan <- data.frame(foundgenestargetscan)
counttargetscan <- sqldf("SELECT mirnas, count(mirnas) FROM foundtargetscan GROUP BY mirnas")
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
foundtargetscan <- merge(mirnas, targetscan, by='mirnas')
View(mirnas)
View(targetscan)
mirnas <- read.csv("D:/spalax_micrornas/microrna/black2.csv", header = TRUE)
colnames(mirnas) = 'mirnas'
targetscan <- read.csv("D:/spalax_micrornas/microrna/TargetScan.csv", header = TRUE)
colnames(targetscan)[1] <- 'mirnas'
miRNAtoFamily <- read.csv("D:/spalax_micrornas/microrna/miR_Family_Info.csv", header = TRUE)
colnames(miRNAtoFamily)[4] <- 'miRNA'
mirnas <- merge(mirnas, miRNAtoFamily, by='miRNA')
mirnas <- read.csv("D:/spalax_micrornas/microrna/black2.csv", header = TRUE)
mirnas <- merge(mirnas, miRNAtoFamily, by='miRNA')
mirnas <- mirnas$Ã¯..miR.family
mirnas <- unique(mirnas)
mirnas <- data.frame(mirnas)
foundtargetscan <- merge(mirnas, targetscan, by='mirnas')
counttargetscan <- sqldf("SELECT mirnas, count(mirnas) FROM foundtargetscan GROUP BY mirnas")
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
counttargetscan <- counttargetscan[order(counttargetscan$`count(mirnas)`, decreasing = TRUE),]
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
png('D:/spalax_micrornas/distr/targetscan.png')
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
dev.off()
png('D:/spalax_micrornas/distr/targetscan.png', width = 10, height = 10, res = 400)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
dev.off()
help(png)
png('D:/spalax_micrornas/distr/targetscan.png', width = 500, height = 500, res = 400)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
dev.off()
png('D:/spalax_micrornas/distr/targetscan.png', width = 500, height = 500, res = 100)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=1)
dev.off()
png('D:/spalax_micrornas/distr/targetscan.png', width = 500, height = 800, res = 100)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.5)
dev.off()
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, labels = counttargetscan$mirnas[1:10], srt = 45, cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45,cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, xpd = TRUE, cex=0.5)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, xpd = TRUE, cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.5)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.8)
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.8)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n")
text(plt, par("usr")[3], labels = counttargetscan$mirnas[1:10], srt = 45, adj = c(1.1,1.1), xpd = TRUE, cex=0.8)
plt <- barplot(counttargetscan$`count(mirnas)`[1:10], col=c("darkblue","yellow"), xaxt="n", horiz = TRUE)
barplot(countmirnatarbase$`count(mirnas)`, main="miRNA Distribution of miRTarbase",
xlab="Number of validated mRNAs", col=c("darkblue","yellow"),
names.arg = countmirnatarbase$mirnas, cex.names=1, horiz = TRUE)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, angle = 45, horiz = TRUE)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, horiz = TRUE)
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
counttargetscan <- counttargetscan[order(counttargetscan$`count(mirnas)`, decreasing = FALSE),]
barplot(counttargetscan$`count(mirnas)`[1:10],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[1:10], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
counttargetscan <- counttargetscan[order(counttargetscan$`count(mirnas)`, decreasing = TRUE),]
10:1
barplot(counttargetscan$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
barplot(counttargetscan$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
par(las=2)
par(mar=c(5,17,4,1))
barplot(counttargetscan$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
tiff(file="D:/spalax_micrornas/distr/targetscan.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(counttargetscan$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = counttargetscan$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
mirtarbase <- read.csv("D:/spalax_micrornas/microrna/mmu_MTI.csv", header = TRUE)
foundmirtarbase <- merge(mirnas, mirtarbase, by='mirnas')
colnames(mirtarbase)[2] <- "mirnas"
foundmirtarbase <- merge(mirnas, mirtarbase, by='mirnas')
countmirnatarbase <- sqldf("SELECT mirnas, count(mirnas) FROM foundmirtarbase GROUP BY mirnas")
countmirnatarbase <- countmirnatarbase[order(countmirnatarbase$`count(mirnas)`, decreasing = TRUE),]
tiff(file="D:/spalax_micrornas/distr/mirtarbase.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countmirnatarbase$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countmirnatarbase$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
pitaf0 <- read.csv("D:/spalax_micrornas/microrna/PITA_sites_mm9_0_0_TOP.tab.csv", header = TRUE)
colnames(pitaf0)[3] <- 'miRNA'
replace <- merge(pitaf0, miRNAtoFamily, by='miRNA')
colnames(replace)[15] <- 'mirnas'
replace <- merge(mirnas, replace, by='mirnas')
countPITA <- sqldf("SELECT mirnas, count(mirnas) FROM replace GROUP BY mirnas")
mirDBN <- read.table(file = 'D:/spalax_micrornas/microrna/mm.tsv', sep = '\t', header = TRUE)
colnames(mirDBN)[1] <- 'miRNA'
mirDBN <- merge(mirDBN, miRNAtoFamily, by='miRNA')
mirDBN <- data.frame(mirDBN$Ã¯..miR.family, mirDBN$mrna, mirDBN$score)
colnames(mirDBN)[1] <- 'mirnas'
mirDBN <- merge(mirnas, mirDBN, by='mirnas')
t1 <- mirDBN[mirDBN$mirDBN.score >= 95, ]
countmirDBN <- sqldf("SELECT mirnas, count(mirnas) FROM t1 GROUP BY mirnas")
countPITA <- countPITA[order(countPITA$`count(mirnas)`, decreasing = TRUE),]
countmirDBN <- countmirDBN[order(countmirDBN$`count(mirnas)`, decreasing = TRUE),]
tiff(file="D:/spalax_micrornas/distr/countmirDBN.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countmirDBN$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countmirDBN$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
tiff(file="D:/spalax_micrornas/distr/countPITA.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countPITA$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countPITA$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
tiff(file="D:/spalax_micrornas/distr/countmirDBN.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countmirDBN$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countmirDBN$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
tiff(file="D:/spalax_micrornas/distr/countmirDBN.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countmirDBN$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countmirDBN$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
tiff(file="D:/spalax_micrornas/distr/countPITA.tiff")
par(las=2)
par(mar=c(5,17,4,1))
barplot(countPITA$`count(mirnas)`[10:1],col=c("darkblue","yellow"),
names.arg = countPITA$mirnas[10:1], cex.names=1, xpd = NA, horiz = TRUE, beside=TRUE)
dev.off()
save.image("D:/spalax_micrornas/distr/sdgsdfg.RData")
load("D:/zipp_pub/analysis.RData")
pathview(gene.data = kdata, pathway.id = '04910',
species = "hsa", out = 'Insulin signaling pathway' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
library(pathview)
pathview(gene.data = kdata, pathway.id = '04910',
species = "hsa", out = 'Insulin signaling pathway' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
View(human)
pathview(gene.data = kdata, pathway.id = '04727',
species = "hsa", out = 'GABAergic synapse' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
pathview(gene.data = kdata, pathway.id = '04724',
species = "hsa", out = 'Glutamatergic synapse' , gene.idtype = "SYMBOL",
low=lowcolor, mid=midcolor, high=highcolor)
View(human)
load("D:/zipp_pub/analysis.RData")
edo <- enrichGO(Mouse$Gene, org.Mm.eg.db, pvalueCutoff = 0.05, ont = "BP", keyType = "SYMBOL")
library('VennDiagram')
library('sqldf')
library('org.Mm.eg.db')
library('pathview')
library('ggupset')
library('ggnewscale')
library("DESeq2")
library('rio')
library('org.Hs.eg.db')
library('org.Rn.eg.db')
library('readxl')
library('DOSE')
library('enrichplot')
library('clusterProfiler')
library('RColorBrewer')
library('org.Rn.eg.db')
edo <- enrichGO(Mouse$Gene, org.Mm.eg.db, pvalueCutoff = 0.05, ont = "BP", keyType = "SYMBOL")
index = 0
GO = 'GO:0099536'
for(i in 1:length(edo@result$ID)){
if(edo@result$ID[i] == GO){
index = i
break
}
}
pathway <- data.frame(Gene = strsplit(edo@result$geneID[index], '/'))
colnames(pathway) = 'Gene'
pathway <- merge(pathway, Mouse, by='Gene')
pathway <- pathway[order(pathway$log2FoldChange),]
pathway <- pathway[,1:8]
edo <- enrichGO(Mouse$Gene, org.Mm.eg.db, pvalueCutoff = 0.05, ont = "BP", keyType = "SYMBOL")
View(edo)
edo@result[["Description"]]
index = 0
GO = 'GO:0099536'
for(i in 1:length(edo@result$ID)){
if(edo@result$ID[i] == GO){
index = i
break
}
}
edo <- enrichGO(Mouse$Gene, org.Mm.eg.db, pvalueCutoff = 0.05, ont = "ALL", keyType = "SYMBOL")
index = 0
GO = 'GO:0099536'
for(i in 1:length(edo@result$ID)){
if(edo@result$ID[i] == GO){
index = i
break
}
}
View(data.frame(edo@result))
View(edo_gsea)
library('devtools')
devtools::create('cotargeting_annotation')
devtools::create('cotargeting.annotation')
library("BiocCheck")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
devtools::build_vignettes('C:/Users/Saleh/Documents/cotargeting.annotation')
devtools::build_vignettes('C:/Users/Saleh/Documents/cotargeting.annotation/')
devtools::build_vignettes('C:/Users/Saleh/Documents/cotargeting.annotation')
setwd("C:/Users/Saleh/Documents/cotargeting.annotation/")
devtools::build_vignettes()
devtools::build_vignettes(pkg = 'cotargeting.annotation')
devtools::build_vignettes(pkg = 'C:/Users/Saleh/Documents/cotargeting.annotation')
devtools::build_vignettes(pkg = 'C:/Users/Saleh/Documents/cotargeting.annotation')
devtools::build_vignettes(pkg = 'C:/Users/Saleh/Documents/cotargeting.annotation')
devtools::build_vignettes(pkg = 'C:/Users/Saleh/Documents/cotargeting.annotation')
BiocCheck::BiocCheck("C:/Users/Saleh/Documents/cotargeting.annotation")
devtools::document()
devtools::build_vignettes(pkg = 'C:/Users/Saleh/Documents/cotargeting.annotation')
